require 'socket'

class CompExploit
	def initialize
		@s = TCPSocket.new('localhost', 4433)
		@charset = ('a'..'z').to_a + ['_']
		@key = "do_you_know_about_crime"
	end	

	def get_nonce
		@nonce = @s.recv(8)
		p @nonce
	end

	def get_length data
		length = [data.length].pack("I")
		@s.print(length)
		@s.print(data)
		length = @s.recv(4).unpack("I")[0]
		@s.recv(length)
		return length
	end

	def get_bytes c
			bytes = ""	
			min = 0x100000000
			c.each do |key,value|
					min = value if value < min
			end

			c.each do |key,value|
					bytes += key if min == value
			end

			puts "Cannot Find" if bytes.length == 0 
			puts "Multiple Find : #{bytes}" if bytes.length > 1
			bytes
	end

	def get_first_byte
		first_byte = ""
		c = {} 
		@charset.each do |x|
			c[x] = get_length(x * 10)
		end

		first_byte = get_bytes(c)
		@key += first_byte
		puts "get_first_byte : #{@key}"
	end

	def get_next_byte
			100.times do |cnt|
					dummy = "+" * cnt
					c = {}
					@charset.each do |x|
							c[x] = get_length((@key+x) * cnt)
					end

					next_byte = get_bytes(c)
					puts "get_next_byte : #{next_byte}"
					puts "Success : #{next_byte}" if next_byte.length == 1
			end
	end
end

s = CompExploit.new
s.get_nonce
s.get_next_byte
