import os
from Crypto.PublicKey import RSA
from Crypto.Hash import MD5
from socket import *
from fractions import gcd
import sys

def get_n(rsa_a, rsa_b):
	val_a = 2**65537 - int(rsa_a, 16)
	val_b = 3**65537 - int(rsa_b, 16)
	return gcd(val_a, val_b)

def check(l):
	for x in l:
		for y in l:
			if x == y:
				continue

			p = gcd(x["n"], y["n"])
			if len(bin(p)) > 100:
				print "FOUND p : " + str(p)
				print "x : " + str(x)
				sys.exit(1)

n_list = []

while True:
		s = socket(AF_INET, SOCK_STREAM)
		s.connect(('localhost', 4321))
		f = s.makefile()
		times = 0
		while times < 5:
			d = f.readline()
			#print d
			if d.find('===========================') >= 0:
				if times == 0:
					value = f.readline()
					#print "value : " + value
				elif times == 1:
					s.send("\x00"*1023 + "\x02")
				elif times == 2:
					rsa_a = f.readline()
					#print "rsa_a : " + rsa_a
				elif times == 3:
					s.send("\x00"*1023 + "\x03")
				elif times == 4:
					rsa_b = f.readline()
					#print "rsa_b : " + rsa_b
					break
				times += 1

		s.close()
		x = {"n":get_n(rsa_a, rsa_b), "enc":value}
		n_list.append(x)
		check(n_list)
		print "%d times" % len(n_list)



